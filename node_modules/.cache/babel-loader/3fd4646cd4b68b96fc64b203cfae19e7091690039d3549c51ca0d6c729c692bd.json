{"ast":null,"code":"var _jsxFileName = \"/Users/nika/Documents/GitHub/pdf-upload-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport * as pdfjs from 'pdfjs-dist';\nimport { jsPDF } from \"jspdf\";\nimport { PDFDocument } from \"pdf-lib\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjs.GlobalWorkerOptions.workerSrc = process.env.PUBLIC_URL + '/pdf.worker.js';\nfunction App() {\n  _s();\n  const [pdfDoc, setPdfDoc] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('Chapter I');\n  const [results, setResults] = useState([]);\n  const [pageContents, setPageContents] = useState({});\n  const [startPage, setStartPage] = useState('');\n  const [endPage, setEndPage] = useState('');\n  const exportPDF = async () => {\n    if (pdfDoc && startPage && endPage) {\n      // Convert startPage and endPage to numbers\n      const start = parseInt(startPage, 10);\n      const end = parseInt(endPage, 10);\n\n      // Validate the page numbers\n      if (start > 0 && end > 0 && end >= start) {\n        // Your code to extract pages from pdfDoc and create a new PDF\n        // using libraries like jsPDF and pdf-lib will go here\n      } else {\n        console.error(\"Invalid page numbers\");\n      }\n    }\n  };\n  const onFileChange = async e => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = async event => {\n        const typedArray = new Uint8Array(event.target.result);\n        try {\n          const pdfDocument = await pdfjs.getDocument({\n            data: typedArray\n          }).promise;\n          setPdfDoc(pdfDocument);\n          // searchPDF(pdfDocument, searchTerm);\n        } catch (error) {\n          console.error(\"Error parsing the PDF:\", error);\n        }\n      };\n      reader.readAsArrayBuffer(file);\n    }\n  };\n  const searchPDF = async (pdfDocument, term, singleInstance = false) => {\n    let newResults = [];\n    let newPageContents = {};\n    for (let i = 1; i <= pdfDocument.numPages; i++) {\n      const page = await pdfDocument.getPage(i);\n      const content = await page.getTextContent();\n      const textItems = content.items.map(item => item.str).join(' ');\n      const lowerCaseTextItems = textItems.toLowerCase();\n      if (lowerCaseTextItems.includes(term.toLowerCase())) {\n        const firstTenWords = textItems.split(' ').slice(0, 10).join(' ');\n        newResults.push({\n          page: i,\n          preview: firstTenWords,\n          fullText: textItems\n        });\n        newPageContents[i] = false;\n        if (singleInstance) {\n          break;\n        }\n      }\n    }\n    setResults(newResults);\n    setPageContents(newPageContents);\n    if (newResults.length === 0) {\n      console.log(`\"${term}\" not found in the document.`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: onFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: startPage,\n          onChange: e => setStartPage(e.target.value),\n          placeholder: \"Start Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: endPage,\n          onChange: e => setEndPage(e.target.value),\n          placeholder: \"End Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: exportPDF,\n          children: \"Export PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value),\n          placeholder: \"Search term\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => searchPDF(pdfDoc, searchTerm),\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => searchPDF(pdfDoc, \"contents\", true),\n          children: \"List Table of Contents\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: results.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Page \", result.page, \": \", result.preview]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setPageContents({\n                ...pageContents,\n                [result.page]: !pageContents[result.page]\n              }),\n              children: \"Print Entire Page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 1\n            }, this), pageContents[result.page] && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: result.fullText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 31\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"PdQJK7Rh16kFaYHs1PCRJ8NAkj8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","pdfjs","jsPDF","PDFDocument","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","process","env","PUBLIC_URL","App","_s","pdfDoc","setPdfDoc","searchTerm","setSearchTerm","results","setResults","pageContents","setPageContents","startPage","setStartPage","endPage","setEndPage","exportPDF","start","parseInt","end","console","error","onFileChange","e","file","target","files","reader","FileReader","onload","event","typedArray","Uint8Array","result","pdfDocument","getDocument","data","promise","readAsArrayBuffer","searchPDF","term","singleInstance","newResults","newPageContents","i","numPages","page","getPage","content","getTextContent","textItems","items","map","item","str","join","lowerCaseTextItems","toLowerCase","includes","firstTenWords","split","slice","push","preview","fullText","length","log","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","value","placeholder","onClick","index","_c","$RefreshReg$"],"sources":["/Users/nika/Documents/GitHub/pdf-upload-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport * as pdfjs from 'pdfjs-dist';\nimport { jsPDF } from \"jspdf\";\nimport { PDFDocument } from \"pdf-lib\";\n\npdfjs.GlobalWorkerOptions.workerSrc = process.env.PUBLIC_URL + '/pdf.worker.js';\n\nfunction App() {\n    const [pdfDoc, setPdfDoc] = useState(null);\n    const [searchTerm, setSearchTerm] = useState('Chapter I');\n    const [results, setResults] = useState([]);\n    const [pageContents, setPageContents] = useState({});\nconst [startPage, setStartPage] = useState('');\nconst [endPage, setEndPage] = useState('');\nconst exportPDF = async () => {\n    if (pdfDoc && startPage && endPage) {\n        // Convert startPage and endPage to numbers\n        const start = parseInt(startPage, 10);\n        const end = parseInt(endPage, 10);\n\n        // Validate the page numbers\n        if (start > 0 && end > 0 && end >= start) {\n            // Your code to extract pages from pdfDoc and create a new PDF\n            // using libraries like jsPDF and pdf-lib will go here\n        } else {\n            console.error(\"Invalid page numbers\");\n        }\n    }\n};\n\n    const onFileChange = async (e) => {\n        const file = e.target.files[0];\n        if (file) {\n            const reader = new FileReader();\n            reader.onload = async (event) => {\n                const typedArray = new Uint8Array(event.target.result);\n                try {\n                    const pdfDocument = await pdfjs.getDocument({ data: typedArray }).promise;\n                    setPdfDoc(pdfDocument);\n                    // searchPDF(pdfDocument, searchTerm);\n                } catch (error) {\n                    console.error(\"Error parsing the PDF:\", error);\n                }\n            };\n            reader.readAsArrayBuffer(file);\n        }\n    };\n\nconst searchPDF = async (pdfDocument, term, singleInstance = false) => {\n    let newResults = [];\n    let newPageContents = {};\n\n    for (let i = 1; i <= pdfDocument.numPages; i++) {\n        const page = await pdfDocument.getPage(i);\n        const content = await page.getTextContent();\n        const textItems = content.items.map(item => item.str).join(' ');\n        const lowerCaseTextItems = textItems.toLowerCase();\n\n        if (lowerCaseTextItems.includes(term.toLowerCase())) {\n    const firstTenWords = textItems.split(' ').slice(0, 10).join(' ');\n    newResults.push({ page: i, preview: firstTenWords, fullText: textItems });\n    newPageContents[i] = false;\n\n    if (singleInstance) {\n        break;\n    }\n}\n\n    }\n\n    setResults(newResults);\n    setPageContents(newPageContents);\n\n    if (newResults.length === 0) {\n        console.log(`\"${term}\" not found in the document.`);\n    }\n};\n\n\n return (\n    <div>\n        <div>\n            \n    <div>\n        <input type=\"file\" onChange={onFileChange} />\n        <br />\n        <input type=\"text\" value={startPage} onChange={e => setStartPage(e.target.value)} placeholder=\"Start Page\" />\n<input type=\"text\" value={endPage} onChange={e => setEndPage(e.target.value)} placeholder=\"End Page\" />\n<button onClick={exportPDF}>Export PDF</button>\n\n        <input type=\"text\" value={searchTerm} onChange={e => setSearchTerm(e.target.value)} placeholder=\"Search term\" />\n        <button onClick={() => searchPDF(pdfDoc, searchTerm)}>Search</button>\n        <button onClick={() => searchPDF(pdfDoc, \"contents\", true)}>List Table of Contents</button>\n            <div>\n                {results.map((result, index) => (\n                    <div key={index}>\n                        <p>Page {result.page}: {result.preview}</p>\n<button onClick={() => setPageContents({ ...pageContents, [result.page]: !pageContents[result.page] })}>Print Entire Page</button>\n{pageContents[result.page] && <p>{result.fullText}</p>}\n                    </div>\n                ))}\n            </div>\n            <div>\n     \n            </div>\n    </div>\n    \n\n        </div>\n    </div>\n);\n}\n\nexport default App;\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,KAAKC,KAAK,MAAM,YAAY;AACnC,SAASC,KAAK,QAAQ,OAAO;AAC7B,SAASC,WAAW,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtCJ,KAAK,CAACK,mBAAmB,CAACC,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,UAAU,GAAG,gBAAgB;AAE/E,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,WAAW,CAAC;EACzD,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACmB,YAAY,EAAEC,eAAe,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxD,MAAM,CAACqB,SAAS,EAAEC,YAAY,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACuB,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMyB,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAIZ,MAAM,IAAIQ,SAAS,IAAIE,OAAO,EAAE;MAChC;MACA,MAAMG,KAAK,GAAGC,QAAQ,CAACN,SAAS,EAAE,EAAE,CAAC;MACrC,MAAMO,GAAG,GAAGD,QAAQ,CAACJ,OAAO,EAAE,EAAE,CAAC;;MAEjC;MACA,IAAIG,KAAK,GAAG,CAAC,IAAIE,GAAG,GAAG,CAAC,IAAIA,GAAG,IAAIF,KAAK,EAAE;QACtC;QACA;MAAA,CACH,MAAM;QACHG,OAAO,CAACC,KAAK,CAAC,sBAAsB,CAAC;MACzC;IACJ;EACJ,CAAC;EAEG,MAAMC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9B,IAAIF,IAAI,EAAE;MACN,MAAMG,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,MAAM,GAAG,MAAOC,KAAK,IAAK;QAC7B,MAAMC,UAAU,GAAG,IAAIC,UAAU,CAACF,KAAK,CAACL,MAAM,CAACQ,MAAM,CAAC;QACtD,IAAI;UACA,MAAMC,WAAW,GAAG,MAAM1C,KAAK,CAAC2C,WAAW,CAAC;YAAEC,IAAI,EAAEL;UAAW,CAAC,CAAC,CAACM,OAAO;UACzEhC,SAAS,CAAC6B,WAAW,CAAC;UACtB;QACJ,CAAC,CAAC,OAAOb,KAAK,EAAE;UACZD,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAClD;MACJ,CAAC;MACDM,MAAM,CAACW,iBAAiB,CAACd,IAAI,CAAC;IAClC;EACJ,CAAC;EAEL,MAAMe,SAAS,GAAG,MAAAA,CAAOL,WAAW,EAAEM,IAAI,EAAEC,cAAc,GAAG,KAAK,KAAK;IACnE,IAAIC,UAAU,GAAG,EAAE;IACnB,IAAIC,eAAe,GAAG,CAAC,CAAC;IAExB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIV,WAAW,CAACW,QAAQ,EAAED,CAAC,EAAE,EAAE;MAC5C,MAAME,IAAI,GAAG,MAAMZ,WAAW,CAACa,OAAO,CAACH,CAAC,CAAC;MACzC,MAAMI,OAAO,GAAG,MAAMF,IAAI,CAACG,cAAc,CAAC,CAAC;MAC3C,MAAMC,SAAS,GAAGF,OAAO,CAACG,KAAK,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,GAAG,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;MAC/D,MAAMC,kBAAkB,GAAGN,SAAS,CAACO,WAAW,CAAC,CAAC;MAElD,IAAID,kBAAkB,CAACE,QAAQ,CAAClB,IAAI,CAACiB,WAAW,CAAC,CAAC,CAAC,EAAE;QACzD,MAAME,aAAa,GAAGT,SAAS,CAACU,KAAK,CAAC,GAAG,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAACN,IAAI,CAAC,GAAG,CAAC;QACjEb,UAAU,CAACoB,IAAI,CAAC;UAAEhB,IAAI,EAAEF,CAAC;UAAEmB,OAAO,EAAEJ,aAAa;UAAEK,QAAQ,EAAEd;QAAU,CAAC,CAAC;QACzEP,eAAe,CAACC,CAAC,CAAC,GAAG,KAAK;QAE1B,IAAIH,cAAc,EAAE;UAChB;QACJ;MACJ;IAEI;IAEAhC,UAAU,CAACiC,UAAU,CAAC;IACtB/B,eAAe,CAACgC,eAAe,CAAC;IAEhC,IAAID,UAAU,CAACuB,MAAM,KAAK,CAAC,EAAE;MACzB7C,OAAO,CAAC8C,GAAG,CAAE,IAAG1B,IAAK,8BAA6B,CAAC;IACvD;EACJ,CAAC;EAGA,oBACG5C,OAAA;IAAAuE,QAAA,eACIvE,OAAA;MAAAuE,QAAA,eAEJvE,OAAA;QAAAuE,QAAA,gBACIvE,OAAA;UAAOwE,IAAI,EAAC,MAAM;UAACC,QAAQ,EAAE/C;QAAa;UAAAgD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC7C7E,OAAA;UAAA0E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACN7E,OAAA;UAAOwE,IAAI,EAAC,MAAM;UAACM,KAAK,EAAE9D,SAAU;UAACyD,QAAQ,EAAE9C,CAAC,IAAIV,YAAY,CAACU,CAAC,CAACE,MAAM,CAACiD,KAAK,CAAE;UAACC,WAAW,EAAC;QAAY;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACrH7E,OAAA;UAAOwE,IAAI,EAAC,MAAM;UAACM,KAAK,EAAE5D,OAAQ;UAACuD,QAAQ,EAAE9C,CAAC,IAAIR,UAAU,CAACQ,CAAC,CAACE,MAAM,CAACiD,KAAK,CAAE;UAACC,WAAW,EAAC;QAAU;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACvG7E,OAAA;UAAQgF,OAAO,EAAE5D,SAAU;UAAAmD,QAAA,EAAC;QAAU;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAEvC7E,OAAA;UAAOwE,IAAI,EAAC,MAAM;UAACM,KAAK,EAAEpE,UAAW;UAAC+D,QAAQ,EAAE9C,CAAC,IAAIhB,aAAa,CAACgB,CAAC,CAACE,MAAM,CAACiD,KAAK,CAAE;UAACC,WAAW,EAAC;QAAa;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAChH7E,OAAA;UAAQgF,OAAO,EAAEA,CAAA,KAAMrC,SAAS,CAACnC,MAAM,EAAEE,UAAU,CAAE;UAAA6D,QAAA,EAAC;QAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACrE7E,OAAA;UAAQgF,OAAO,EAAEA,CAAA,KAAMrC,SAAS,CAACnC,MAAM,EAAE,UAAU,EAAE,IAAI,CAAE;UAAA+D,QAAA,EAAC;QAAsB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACvF7E,OAAA;UAAAuE,QAAA,EACK3D,OAAO,CAAC4C,GAAG,CAAC,CAACnB,MAAM,EAAE4C,KAAK,kBACvBjF,OAAA;YAAAuE,QAAA,gBACIvE,OAAA;cAAAuE,QAAA,GAAG,OAAK,EAAClC,MAAM,CAACa,IAAI,EAAC,IAAE,EAACb,MAAM,CAAC8B,OAAO;YAAA;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACnE7E,OAAA;cAAQgF,OAAO,EAAEA,CAAA,KAAMjE,eAAe,CAAC;gBAAE,GAAGD,YAAY;gBAAE,CAACuB,MAAM,CAACa,IAAI,GAAG,CAACpC,YAAY,CAACuB,MAAM,CAACa,IAAI;cAAE,CAAC,CAAE;cAAAqB,QAAA,EAAC;YAAiB;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EACjI/D,YAAY,CAACuB,MAAM,CAACa,IAAI,CAAC,iBAAIlD,OAAA;cAAAuE,QAAA,EAAIlC,MAAM,CAAC+B;YAAQ;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA,GAHxBI,KAAK;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAIV,CACR;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACN7E,OAAA;UAAA0E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACtE,EAAA,CAxGQD,GAAG;AAAA4E,EAAA,GAAH5E,GAAG;AA0GZ,eAAeA,GAAG;AAAC,IAAA4E,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}