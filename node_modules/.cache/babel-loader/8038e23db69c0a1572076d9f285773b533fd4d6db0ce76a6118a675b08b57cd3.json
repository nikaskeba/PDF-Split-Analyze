{"ast":null,"code":"var _jsxFileName = \"/Users/nika/Documents/GitHub/pdf-upload-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport pdfjs from 'pdfjs-dist/es5/build/pdf';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [pdf, setPdf] = useState(null);\n  const [chapterOnePage, setChapterOnePage] = useState(null);\n  const onFileChange = async e => {\n    const file = e.target.files[0];\n    if (file) {\n      const fileReader = new FileReader();\n      fileReader.onload = async event => {\n        const pdfData = new Uint8Array(event.target.result);\n        const pdfDoc = await pdfjs.getDocument({\n          data: pdfData\n        }).promise;\n        for (let i = 1; i <= pdfDoc.numPages; i++) {\n          const page = await pdfDoc.getPage(i);\n          const content = await page.getTextContent();\n          const textItems = content.items.map(item => item.str).join(' ');\n          if (textItems.includes(\"Chapter I\")) {\n            setChapterOnePage(i);\n            break;\n          }\n        }\n      };\n      fileReader.readAsArrayBuffer(file);\n    }\n  };\n  const onUpload = () => {\n    // Implement your upload logic here.\n    // For now, we'll just display a console message.\n    console.log(\"PDF uploaded:\", pdf);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"PDF Uploader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".pdf\",\n      onChange: onFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), chapterOnePage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Chapter I starts on page: \", chapterOnePage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xP4czhumVSLQwb37JpnqHE/1Nkk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","pdfjs","jsxDEV","_jsxDEV","App","_s","pdf","setPdf","chapterOnePage","setChapterOnePage","onFileChange","e","file","target","files","fileReader","FileReader","onload","event","pdfData","Uint8Array","result","pdfDoc","getDocument","data","promise","i","numPages","page","getPage","content","getTextContent","textItems","items","map","item","str","join","includes","readAsArrayBuffer","onUpload","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/nika/Documents/GitHub/pdf-upload-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport pdfjs from 'pdfjs-dist/es5/build/pdf';\n\nfunction App() {\n  const [pdf, setPdf] = useState(null);\n  const [chapterOnePage, setChapterOnePage] = useState(null);\n\n  const onFileChange = async (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      const fileReader = new FileReader();\n      fileReader.onload = async (event) => {\n        const pdfData = new Uint8Array(event.target.result);\n        \n        const pdfDoc = await pdfjs.getDocument({data: pdfData}).promise;\n        for (let i = 1; i <= pdfDoc.numPages; i++) {\n          const page = await pdfDoc.getPage(i);\n          const content = await page.getTextContent();\n          const textItems = content.items.map(item => item.str).join(' ');\n\n          if (textItems.includes(\"Chapter I\")) {\n            setChapterOnePage(i);\n            break;\n          }\n        }\n      };\n\n      fileReader.readAsArrayBuffer(file);\n    }\n  };\n\n  const onUpload = () => {\n    // Implement your upload logic here.\n    // For now, we'll just display a console message.\n    console.log(\"PDF uploaded:\", pdf);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>PDF Uploader</h1>\n      <input type=\"file\" accept=\".pdf\" onChange={onFileChange} />\n      <button onClick={onUpload}>Upload</button>\n      {chapterOnePage && <p>Chapter I starts on page: {chapterOnePage}</p>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM,CAACQ,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE1D,MAAMU,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChC,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9B,IAAIF,IAAI,EAAE;MACR,MAAMG,UAAU,GAAG,IAAIC,UAAU,CAAC,CAAC;MACnCD,UAAU,CAACE,MAAM,GAAG,MAAOC,KAAK,IAAK;QACnC,MAAMC,OAAO,GAAG,IAAIC,UAAU,CAACF,KAAK,CAACL,MAAM,CAACQ,MAAM,CAAC;QAEnD,MAAMC,MAAM,GAAG,MAAMrB,KAAK,CAACsB,WAAW,CAAC;UAACC,IAAI,EAAEL;QAAO,CAAC,CAAC,CAACM,OAAO;QAC/D,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIJ,MAAM,CAACK,QAAQ,EAAED,CAAC,EAAE,EAAE;UACzC,MAAME,IAAI,GAAG,MAAMN,MAAM,CAACO,OAAO,CAACH,CAAC,CAAC;UACpC,MAAMI,OAAO,GAAG,MAAMF,IAAI,CAACG,cAAc,CAAC,CAAC;UAC3C,MAAMC,SAAS,GAAGF,OAAO,CAACG,KAAK,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,GAAG,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;UAE/D,IAAIL,SAAS,CAACM,QAAQ,CAAC,WAAW,CAAC,EAAE;YACnC7B,iBAAiB,CAACiB,CAAC,CAAC;YACpB;UACF;QACF;MACF,CAAC;MAEDX,UAAU,CAACwB,iBAAiB,CAAC3B,IAAI,CAAC;IACpC;EACF,CAAC;EAED,MAAM4B,QAAQ,GAAGA,CAAA,KAAM;IACrB;IACA;IACAC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEpC,GAAG,CAAC;EACnC,CAAC;EAED,oBACEH,OAAA;IAAKwC,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBzC,OAAA;MAAAyC,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrB7C,OAAA;MAAO8C,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,MAAM;MAACC,QAAQ,EAAEzC;IAAa;MAAAmC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3D7C,OAAA;MAAQiD,OAAO,EAAEZ,QAAS;MAAAI,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACzCxC,cAAc,iBAAIL,OAAA;MAAAyC,QAAA,GAAG,4BAA0B,EAACpC,cAAc;IAAA;MAAAqC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjE,CAAC;AAEV;AAAC3C,EAAA,CA1CQD,GAAG;AAAAiD,EAAA,GAAHjD,GAAG;AA4CZ,eAAeA,GAAG;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}