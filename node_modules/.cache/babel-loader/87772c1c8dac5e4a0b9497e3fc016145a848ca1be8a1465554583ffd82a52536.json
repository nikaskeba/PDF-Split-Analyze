{"ast":null,"code":"var _jsxFileName = \"/Users/nika/Documents/GitHub/pdf-upload-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport * as pdfjs from 'pdfjs-dist';\nimport { PDFDocument } from \"pdf-lib\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjs.GlobalWorkerOptions.workerSrc = process.env.PUBLIC_URL + '/pdf.worker.js';\nfunction App() {\n  _s();\n  const [pdfDoc, setPdfDoc] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('Chapter I');\n  const [results, setResults] = useState([]);\n  const [pageContents, setPageContents] = useState({});\n  const [startPage, setStartPage] = useState('');\n  const [endPage, setEndPage] = useState('');\n  const exportPDF = async () => {\n    if (pdfDoc && startPage && endPage) {\n      // Convert startPage and endPage to numbers\n      const start = parseInt(startPage, 10);\n      const end = parseInt(endPage, 10);\n\n      // Validate the page numbers\n      if (start > 0 && end > 0 && end >= start && start <= pdfDoc.numPages && end <= pdfDoc.numPages) {\n        try {\n          // Create a new PDFDocument instance\n          const newPdfDoc = await PDFDocument.create();\n\n          // Load the original PDF document\n          const originalPdfBytes = await pdfDoc.getData();\n          const originalPdfDoc = await PDFDocument.load(originalPdfBytes);\n\n          // Copy pages from the original PDF to the new PDF\n          for (let i = start; i <= end; i++) {\n            const [copiedPage] = await newPdfDoc.copyPages(originalPdfDoc, [i - 1]);\n            newPdfDoc.addPage(copiedPage);\n          }\n\n          // Serialize the new PDF to bytes\n          const newPdfBytes = await newPdfDoc.save();\n\n          // Create a Blob object and a link element to allow the user to download the new PDF\n          const blob = new Blob([newPdfBytes], {\n            type: 'application/pdf'\n          });\n          const link = document.createElement('a');\n          link.href = URL.createObjectURL(blob);\n          link.download = 'exported.pdf';\n          link.click();\n        } catch (error) {\n          console.error(\"Error exporting PDF:\", error);\n        }\n      } else {\n        console.error(\"Invalid page numbers\");\n      }\n    }\n  };\n  const onFileChange = async e => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = async event => {\n        const typedArray = new Uint8Array(event.target.result);\n        try {\n          const pdfDocument = await pdfjs.getDocument({\n            data: typedArray\n          }).promise;\n          setPdfDoc(pdfDocument);\n          // searchPDF(pdfDocument, searchTerm);\n        } catch (error) {\n          console.error(\"Error parsing the PDF:\", error);\n        }\n      };\n      reader.readAsArrayBuffer(file);\n    }\n  };\n  const searchPDF = async (pdfDocument, term, singleInstance = false) => {\n    let newResults = [];\n    let newPageContents = {};\n    for (let i = 1; i <= pdfDocument.numPages; i++) {\n      const page = await pdfDocument.getPage(i);\n      const content = await page.getTextContent();\n      const textItems = content.items.map(item => item.str);\n      let cleanedTextItems = textItems.join(' ').replace(/\\b(\\w) (\\w+)\\b/g, '$1$2');\n      const lowerCaseTextItems = cleanedTextItems.toLowerCase();\n      if (lowerCaseTextItems.includes(term.toLowerCase())) {\n        const firstTenWords = textItems.split(' ').slice(0, 10).join(' ');\n        newResults.push({\n          page: i,\n          preview: firstTenWords,\n          fullText: textItems\n        });\n        newPageContents[i] = false;\n        if (singleInstance) {\n          break;\n        }\n      }\n    }\n    setResults(newResults);\n    setPageContents(newPageContents);\n    if (newResults.length === 0) {\n      console.log(`\"${term}\" not found in the document.`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: onFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: startPage,\n          onChange: e => setStartPage(e.target.value),\n          placeholder: \"Start Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: endPage,\n          onChange: e => setEndPage(e.target.value),\n          placeholder: \"End Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: exportPDF,\n          children: \"Export PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value),\n          placeholder: \"Search term\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => searchPDF(pdfDoc, searchTerm),\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => searchPDF(pdfDoc, \"contents\", true),\n          children: \"List Table of Contents\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: results.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Page \", result.page, \": \", result.preview]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setPageContents({\n                ...pageContents,\n                [result.page]: !pageContents[result.page]\n              }),\n              children: \"Print Entire Page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 1\n            }, this), pageContents[result.page] && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: result.fullText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 31\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"PdQJK7Rh16kFaYHs1PCRJ8NAkj8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","pdfjs","PDFDocument","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","process","env","PUBLIC_URL","App","_s","pdfDoc","setPdfDoc","searchTerm","setSearchTerm","results","setResults","pageContents","setPageContents","startPage","setStartPage","endPage","setEndPage","exportPDF","start","parseInt","end","numPages","newPdfDoc","create","originalPdfBytes","getData","originalPdfDoc","load","i","copiedPage","copyPages","addPage","newPdfBytes","save","blob","Blob","type","link","document","createElement","href","URL","createObjectURL","download","click","error","console","onFileChange","e","file","target","files","reader","FileReader","onload","event","typedArray","Uint8Array","result","pdfDocument","getDocument","data","promise","readAsArrayBuffer","searchPDF","term","singleInstance","newResults","newPageContents","page","getPage","content","getTextContent","textItems","items","map","item","str","cleanedTextItems","join","replace","lowerCaseTextItems","toLowerCase","includes","firstTenWords","split","slice","push","preview","fullText","length","log","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","value","placeholder","onClick","index","_c","$RefreshReg$"],"sources":["/Users/nika/Documents/GitHub/pdf-upload-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport * as pdfjs from 'pdfjs-dist';\nimport { PDFDocument } from \"pdf-lib\";\n\npdfjs.GlobalWorkerOptions.workerSrc = process.env.PUBLIC_URL + '/pdf.worker.js';\n\nfunction App() {\n    const [pdfDoc, setPdfDoc] = useState(null);\n    const [searchTerm, setSearchTerm] = useState('Chapter I');\n    const [results, setResults] = useState([]);\n    const [pageContents, setPageContents] = useState({});\nconst [startPage, setStartPage] = useState('');\nconst [endPage, setEndPage] = useState('');\nconst exportPDF = async () => {\n    if (pdfDoc && startPage && endPage) {\n        // Convert startPage and endPage to numbers\n        const start = parseInt(startPage, 10);\n        const end = parseInt(endPage, 10);\n\n        // Validate the page numbers\n        if (start > 0 && end > 0 && end >= start && start <= pdfDoc.numPages && end <= pdfDoc.numPages) {\n            try {\n                // Create a new PDFDocument instance\n                const newPdfDoc = await PDFDocument.create();\n                \n                // Load the original PDF document\n                const originalPdfBytes = await pdfDoc.getData();\n                const originalPdfDoc = await PDFDocument.load(originalPdfBytes);\n                \n                // Copy pages from the original PDF to the new PDF\n                for (let i = start; i <= end; i++) {\n                    const [copiedPage] = await newPdfDoc.copyPages(originalPdfDoc, [i - 1]);\n                    newPdfDoc.addPage(copiedPage);\n                }\n                \n                // Serialize the new PDF to bytes\n                const newPdfBytes = await newPdfDoc.save();\n                \n                // Create a Blob object and a link element to allow the user to download the new PDF\n                const blob = new Blob([newPdfBytes], { type: 'application/pdf' });\n                const link = document.createElement('a');\n                link.href = URL.createObjectURL(blob);\n                link.download = 'exported.pdf';\n                link.click();\n            } catch (error) {\n                console.error(\"Error exporting PDF:\", error);\n            }\n        } else {\n            console.error(\"Invalid page numbers\");\n        }\n    }\n};\n\n\n    const onFileChange = async (e) => {\n        const file = e.target.files[0];\n        if (file) {\n            const reader = new FileReader();\n            reader.onload = async (event) => {\n                const typedArray = new Uint8Array(event.target.result);\n                try {\n                    const pdfDocument = await pdfjs.getDocument({ data: typedArray }).promise;\n                    setPdfDoc(pdfDocument);\n                    // searchPDF(pdfDocument, searchTerm);\n                } catch (error) {\n                    console.error(\"Error parsing the PDF:\", error);\n                }\n            };\n            reader.readAsArrayBuffer(file);\n        }\n    };\n\nconst searchPDF = async (pdfDocument, term, singleInstance = false) => {\n    \n    let newResults = [];\n    let newPageContents = {};\n\n    for (let i = 1; i <= pdfDocument.numPages; i++) {\n        const page = await pdfDocument.getPage(i);\n        const content = await page.getTextContent();\nconst textItems = content.items.map(item => item.str);\nlet cleanedTextItems = textItems.join(' ').replace(/\\b(\\w) (\\w+)\\b/g, '$1$2');\nconst lowerCaseTextItems = cleanedTextItems.toLowerCase();\n\n        if (lowerCaseTextItems.includes(term.toLowerCase())) {\n    const firstTenWords = textItems.split(' ').slice(0, 10).join(' ');\n    newResults.push({ page: i, preview: firstTenWords, fullText: textItems });\n    newPageContents[i] = false;\n\n    if (singleInstance) {\n        break;\n    }\n}\n\n    }\n\n    setResults(newResults);\n    setPageContents(newPageContents);\n\n    if (newResults.length === 0) {\n        console.log(`\"${term}\" not found in the document.`);\n    }\n};\n\n\n return (\n    <div>\n        <div>\n            \n    <div>\n        <input type=\"file\" onChange={onFileChange} />\n        <br />\n        <input type=\"text\" value={startPage} onChange={e => setStartPage(e.target.value)} placeholder=\"Start Page\" />\n<input type=\"text\" value={endPage} onChange={e => setEndPage(e.target.value)} placeholder=\"End Page\" />\n<button onClick={exportPDF}>Export PDF</button>\n\n        <input type=\"text\" value={searchTerm} onChange={e => setSearchTerm(e.target.value)} placeholder=\"Search term\" />\n        <button onClick={() => searchPDF(pdfDoc, searchTerm)}>Search</button>\n        <button onClick={() => searchPDF(pdfDoc, \"contents\", true)}>List Table of Contents</button>\n            <div>\n                {results.map((result, index) => (\n                    <div key={index}>\n                        <p>Page {result.page}: {result.preview}</p>\n<button onClick={() => setPageContents({ ...pageContents, [result.page]: !pageContents[result.page] })}>Print Entire Page</button>\n{pageContents[result.page] && <p>{result.fullText}</p>}\n                    </div>\n                ))}\n            </div>\n            <div>\n     \n            </div>\n    </div>\n    \n\n        </div>\n    </div>\n);\n}\n\nexport default App;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}